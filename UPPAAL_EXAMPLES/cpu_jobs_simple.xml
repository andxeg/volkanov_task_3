<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.
int CPU1_C;
chan CPU1_use, CPU1_done;
int CPU2_C;
chan CPU2_use, CPU2_done;
int done_counter=0;
clock y;</declaration><template><name x="5" y="5">CPU</name><parameter>chan &amp; use, chan &amp; done, int &amp; C</parameter><declaration>// Place local declarations here.
clock x;</declaration><location id="id0" x="-256" y="-80"><name x="-280" y="-112">InUse</name><label kind="invariant" x="-280" y="-64">x &lt;= C</label></location><location id="id1" x="-256" y="-208"><name x="-266" y="-238">idle</name></location><init ref="id1"/><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-408" y="-160">x == C</label><label kind="synchronisation" x="-400" y="-136">done!</label><nail x="-352" y="-80"/><nail x="-352" y="-208"/></transition><transition><source ref="id1"/><target ref="id0"/><label kind="synchronisation" x="-144" y="-168">use?</label><label kind="assignment" x="-144" y="-144">x :=0</label><nail x="-160" y="-208"/><nail x="-160" y="-80"/></transition></template><template><name>Job</name><parameter>const int C1, const int C2</parameter><location id="id2" x="-232" y="-224"><name x="-208" y="-232">End</name></location><location id="id3" x="-320" y="-312"><name x="-392" y="-320">CPU_1</name></location><location id="id4" x="-136" y="-312"><name x="-112" y="-320">CPU_2</name></location><location id="id5" x="-232" y="-408"><name x="-248" y="-440">Start</name></location><init ref="id5"/><transition><source ref="id2"/><target ref="id5"/></transition><transition><source ref="id4"/><target ref="id2"/><label kind="synchronisation" x="-168" y="-272">CPU2_done?</label><label kind="assignment" x="-184" y="-256">done_counter++</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="synchronisation" x="-368" y="-272">CPU1_done?</label><label kind="assignment" x="-384" y="-256">done_counter++</label></transition><transition><source ref="id5"/><target ref="id4"/><label kind="synchronisation" x="-128" y="-384">CPU2_use!</label><label kind="assignment" x="-128" y="-360">CPU2_C = C2</label><nail x="-136" y="-408"/></transition><transition><source ref="id5"/><target ref="id3"/><label kind="synchronisation" x="-400" y="-384">CPU1_use!</label><label kind="assignment" x="-416" y="-360">CPU1_C = C1</label><nail x="-320" y="-408"/></transition></template><system>// Place template instantiations here.
CPU1 = CPU(CPU1_use, CPU1_done, CPU1_C);
CPU2 = CPU(CPU2_use, CPU2_done, CPU2_C);
JobA = Job(3,4);
JobB = Job(3,2);
JobC = Job(6,5);
JobD = Job(3,3);
JobE = Job(2,1);

// List one or more processes to be composed into a system.
system JobA, JobB, JobC, JobD, JobE, CPU1, CPU2;</system></nta>